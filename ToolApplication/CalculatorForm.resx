<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>